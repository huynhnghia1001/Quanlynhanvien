/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ASM2;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class QuanLyNhanVien extends javax.swing.JFrame implements Runnable{
    NhanVienList nv1 = new NhanVienList();
    int index=-1;
String[] headers={"Mã nhân viên"," Họ và tên" ,"Tuổi","Email","Lương"};
DefaultTableModel model = new DefaultTableModel(headers,0);

    /**
     * Creates new form QuanLyNhanVien123
     */
    public QuanLyNhanVien() {
        initComponents();
        this.setLocationRelativeTo(null);
        jtbNhanVien.setModel(model);

        this.Time();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEmail = new javax.swing.JTextField();
        btnLast = new javax.swing.JButton();
        txtLuong = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbNhanVien = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblRecond = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        btnFind = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelMaNhanVien = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabelHoVaTen = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabelTuoi = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelLuong = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        txtTuoi = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        jsxTen = new javax.swing.JButton();
        jsxMa = new javax.swing.JButton();
        jsxLuong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý nhân viên");

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        jtbNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title1", "Title2", "Title3", "Title4", "Title5"
            }
        ));
        jtbNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbNhanVien);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblRecond.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRecond.setForeground(new java.awt.Color(255, 0, 0));
        lblRecond.setText("Recond 1 of 10");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 0, 0));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTime.setText("10:22AM");

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        jLabelMaNhanVien.setText("MÃ NHÂN VIÊN");

        jLabelHoVaTen.setText("HỌ VÀ TÊN");

        jLabelTuoi.setText("TUỔI");

        jLabelEmail.setText("EMAIL");

        jLabelLuong.setText("LƯƠNG");

        btnPrevious.setText("<<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jsxTen.setText("Sắp xếp theo tên");
        jsxTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsxTenActionPerformed(evt);
            }
        });

        jsxMa.setText("Sắp xếp theo mã");
        jsxMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsxMaActionPerformed(evt);
            }
        });

        jsxLuong.setText("Sắp xếp theo lương");
        jsxLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsxLuongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMaNhanVien)
                            .addComponent(jLabelHoVaTen)
                            .addComponent(jLabelTuoi)
                            .addComponent(jLabelEmail)
                            .addComponent(jLabelLuong))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtName)
                                .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE))
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addGap(18, 18, 18)
                                .addComponent(btnPrevious)
                                .addGap(18, 18, 18)
                                .addComponent(btnNext)
                                .addGap(18, 18, 18)
                                .addComponent(btnLast)
                                .addGap(18, 18, 18)
                                .addComponent(lblRecond)
                                .addGap(15, 15, 15))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1)))
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jsxTen, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jsxMa, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jsxLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMaNhanVien)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnNew)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHoVaTen)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTuoi))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEmail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLuong))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFirst)
                            .addComponent(btnPrevious)
                            .addComponent(btnNext)
                            .addComponent(btnLast)
                            .addComponent(lblRecond)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnFind)
                        .addGap(18, 18, 18)
                        .addComponent(btnOpen)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jsxTen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsxMa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsxLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        try{
        index = nv1.dsnv.size()-1;
         showDetail();
        jtbNhanVien.setRowSelectionInterval(index, index);
        updateStatusRecord();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Danh sách rỗng","Lỗi",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void jtbNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbNhanVienMouseClicked
        // TODO add your handling code here:
        int dong = jtbNhanVien.getSelectedRow();
        index = dong;
        NhanVien sv = nv1.dsnv.get(dong);
        txtMaNV.setText(sv.getMaNV());
        txtName.setText(sv.getHoTen());
        txtTuoi.setText(Double.toString(sv.getTuoi()));
        txtEmail.setText(sv.getEmail());
        txtLuong.setText(Double.toString(sv.getLuong()));
        this.updateStatusRecord();
        
    }//GEN-LAST:event_jtbNhanVienMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
       index = -1;
       resetForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
          StringBuilder sb = new StringBuilder();
        
        if(kiemTraTrung(txtMaNV.getText())){
            txtMaNV.setBackground(Color.yellow);
            sb.append("Mã đã tồn tại!\n");
        }else if(txtMaNV.getText().equals("")){
            txtMaNV.setBackground(Color.yellow);
            sb.append("Mã không được để trống!\n");
        }else{
            txtMaNV.setBackground(Color.white);
        }
        
        if (txtName.getText().equals("")){
            txtName.setBackground(Color.yellow);
            sb.append("Họ và tên không được để trống!\n");
        }else{
            txtName.setBackground(Color.white);
        }
            
        this.Tuoi(sb);
        
     
        
        if (txtEmail.getText().equals("")){
            txtEmail.setBackground(Color.yellow);
            sb.append("Mail không được để trống!\n");
        }else{
            txtEmail.setBackground(Color.white);
               this.Email(sb);
        }
        
       
        if (txtLuong.getText().equals("")){
            txtLuong.setBackground(Color.yellow);
            sb.append("Lương không được để trống!\n");
        }else{
            txtLuong.setBackground(Color.white);
             this.Luong(sb);
        }
        
        if (sb.length()>0){
           JOptionPane.showMessageDialog(this, sb.toString(),"Đăng nhập thất bại!",JOptionPane.ERROR_MESSAGE);
        }else if (index == -1){
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công"," Đăng nhập thành công", JOptionPane.INFORMATION_MESSAGE);
            this.loadList();
        }else{
            try{
                
                this.update();
                this.loadTable();
                JOptionPane.showMessageDialog(this, "Sửa thành công", "Thông báo",JOptionPane.INFORMATION_MESSAGE);
            }catch(ArrayIndexOutOfBoundsException ex){
                JOptionPane.showMessageDialog(this,"Không có dữ liệu để sửa");
            }
                               
        }
    
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.removeEmployee();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        if(nv1.dsnv.size() == 0){
            JOptionPane.showMessageDialog(this, "Không có dữ liệu để tìm! Mời bạn nhập dữ liệu", "Thông báo", JOptionPane.OK_OPTION);
        }else{
             this.findEmployee();
             this.updateStatusRecord();
        }
        
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
          Object[] luaChon = {"Ok","Cancel"};
        int traLoi = JOptionPane.showOptionDialog(this, 
                "Có phải bạn muốn thoát ko?","Thoát?",JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,luaChon,luaChon[0]);
        if(traLoi == JOptionPane.YES_NO_OPTION){
              saveFile();
             System.exit(0);
    }
       
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        try{
        index = 0;
        showDetail();
        jtbNhanVien.setRowSelectionInterval(index, index);
        updateStatusRecord();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Danh sách rỗng","Lỗi",JOptionPane.OK_OPTION);
        }
              
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        try{
        if(index> 0){
            index--;
        showDetail();
         jtbNhanVien.setRowSelectionInterval(index, index);
        updateStatusRecord();
        }else if( index == 0 ) {
            index = nv1.dsnv.size() -1 ;
            showDetail();
            jtbNhanVien.setRowSelectionInterval(index, index);
         updateStatusRecord();
            }
        }catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Danh sách rỗng","Lỗi",JOptionPane.OK_OPTION);
    }
                
            
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        try{
        if(index<nv1.dsnv.size()-1){
            index++;
        showDetail();
         jtbNhanVien.setRowSelectionInterval(index, index);
        updateStatusRecord();
        }
            else if (index == nv1.dsnv.size()-1){
                index = 0 ;
                  showDetail();
            jtbNhanVien.setRowSelectionInterval(index, index);
             updateStatusRecord();
                }
            }catch(Exception ex){
                      JOptionPane.showMessageDialog(this, "Danh sách rỗng","Lỗi",JOptionPane.OK_OPTION);
                       
        } 
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
      try{
        openFile();
    
        if(nv1.dsnv.size()>0){
           index = 0;
            showDetail();
            loadTable();
            updateStatusRecord();
             jtbNhanVien.setRowSelectionInterval(index, index);
        }else if(nv1.dsnv.size()==0) {
                  index = -1;
            resetForm();
                JOptionPane.showMessageDialog(this, "Danh sách đang trống","Thông báo", JOptionPane.OK_OPTION);
                }
      }catch(Exception ex){
              JOptionPane.showMessageDialog(this,"Lỗi","Thông báo",JOptionPane.OK_OPTION);
                 
           }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void jsxMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsxMaActionPerformed
        // TODO add your handling code here:
        Comparator<NhanVien> com = new Comparator<NhanVien>(){
            @Override
            public int compare(NhanVien o1,NhanVien o2){
                return o1. maNV.compareTo(o2.maNV);
            }
        };
        Collections.sort(nv1.dsnv, com);
        model.setRowCount(0);
        for (NhanVien sv : nv1.dsnv) {
            Object[] row = new Object[]{
                sv.getMaNV(),sv.getHoTen(),sv.getTuoi(),sv.getEmail(),sv.getLuong()
            };
            model.addRow(row);
        }
    }//GEN-LAST:event_jsxMaActionPerformed

    private void jsxTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsxTenActionPerformed
        // TODO add your handling code here:
        Comparator<NhanVien> com = new Comparator<NhanVien>(){
            @Override
            public int compare(NhanVien o1,NhanVien o2){
                return o1. HoTen.compareTo(o2. HoTen);
            }
        };
        Collections.sort(nv1.dsnv, com);
        model.setRowCount(0);
        for (NhanVien sv : nv1.dsnv) {
            Object[] row = new Object[]{
                sv.getMaNV(),sv.getHoTen(),sv.getTuoi(),sv.getEmail(),sv.getLuong()
            };
            model.addRow(row);
        }
    }//GEN-LAST:event_jsxTenActionPerformed

    private void jsxLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsxLuongActionPerformed
        // TODO add your handling code here:
         Comparator<NhanVien> com = new Comparator<NhanVien>(){
            @Override
            public int compare(NhanVien o1,NhanVien o2){
                Double d1 = o1.luong;
                Double d2 = o2.luong;
                return d1.compareTo(d2);
            }
        };
        Collections.sort(nv1.dsnv, com);
        model.setRowCount(0);
        for (NhanVien sv : nv1.dsnv) {
            Object[] row = new Object[]{
                sv.getMaNV(),sv.getHoTen(),sv.getTuoi(),sv.getEmail(),sv.getLuong()
            };
            model.addRow(row);
        }
    }//GEN-LAST:event_jsxLuongActionPerformed
    public void add(NhanVien nv){
        nv1.them(nv);
    }
    public void loadTable(){
    model.setRowCount(0);
        Object rowData[] = new Object[5];
        for(int i = 0 ; i <nv1.dsnv.size(); i++){
            rowData[0] = nv1.dsnv.get(i).maNV;
            rowData[1] = nv1.dsnv.get(i).HoTen;
            rowData[2] = nv1.dsnv.get(i).tuoi;
            rowData[3] = nv1.dsnv.get(i).email;
            rowData[4] = nv1.dsnv.get(i).luong;
           model.addRow(rowData);
        }
}
     private void showDetail() {
        NhanVien nv = nv1.dsnv.get(index);
        txtMaNV.setText(nv.maNV);
        txtMaNV.setBackground(Color.white);
        txtName.setText(nv.HoTen);
        txtName.setBackground(Color.white);
        txtTuoi.setText(nv.tuoi+"");
        txtTuoi.setBackground(Color.white);
        txtEmail.setText(nv.email);
        txtEmail.setBackground(Color.white);
        txtLuong.setText(nv.luong+"");
        txtLuong.setBackground(Color.white);
        
    }
     public void updateStatusRecord(){
       
         lblRecond.setText("Recond: "+(index+1)+ " of "+ nv1.dsnv.size());
     }
     public void resetForm(){
        txtMaNV.setBackground(Color.white);
        txtName.setBackground(Color.white);
        txtTuoi.setBackground(Color.white);
        txtEmail.setBackground(Color.white);
        txtLuong.setBackground(Color.white);
        
        txtMaNV.setText("");
        txtName.setText("");
        txtTuoi.setText("");
        txtEmail.setText("");
        txtLuong.setText("");
        txtMaNV.requestFocus();
     }
     public void removeEmployee(){
      try{
            Object[] luaChon = {"Ok","Cancel"};
            int traLoi = JOptionPane.showOptionDialog(this, 
            "Có phải bạn muốn Xóa "+ txtMaNV.getText() + " ko?","Thông báo?",JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,luaChon,luaChon[0]);
            if(traLoi == JOptionPane.YES_NO_OPTION){
                nv1.dsnv.remove(jtbNhanVien.getSelectedRow());
                this.loadTable();  
                updateStatusRecord();
            }
            this.resetForm();
            
        }catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(this, "Không có dữ liệu để xóa");
        }
     }
     public void saveFile(){
         try{
             FileOutputStream fos = new FileOutputStream("E:\\Java2\\textasmHuynhTrongNghia.txt");
             ObjectOutputStream oos = new ObjectOutputStream(fos);
             oos.writeObject(nv1.dsnv);
             oos.close();
         }
         catch(Exception ex){
             System.out.println("Error"+ex);
         }
         
     }
     public void openFile(){
         FileInputStream fis = null;
         ObjectInputStream ois = null;
         try{
             fis =new FileInputStream("E:\\Java2\\textasmHuynhTrongNghia.txt");
             ois = new ObjectInputStream(fis);
             nv1.dsnv=(ArrayList<NhanVien>)ois.readObject();
             ois.close();
             fis.close();
         }
         catch(Exception ex){
             System.out.println("Không tìm thấy file! "+ex);
//             JOptionPane.showMessageDialog(this,"Không tìm thấy File!");
             
         }
     }
     private boolean kiemTraTrung(String ma) {
        boolean co = false;
        if(!nv1.dsnv.isEmpty()){
            for (NhanVien s : nv1.dsnv) {
                if(s.getMaNV().equalsIgnoreCase(ma))
                    co = true;
            }
        }else{
            co = false;
        }
        return co;
    }
     private void Tuoi(StringBuilder sb){
        try {
            double tuoi = Double.parseDouble(txtTuoi.getText());
            
            if(tuoi<16 || tuoi>55){
                txtTuoi.setBackground(Color.yellow);
                sb.append("Tuổi phải lớn hơn 16 tuổi và nhỏ hơn 55 tuổi! \n");
            }else{
                txtTuoi.setBackground(Color.white);
            }
            
        } catch (Exception e1) {
            txtTuoi.setBackground(Color.yellow);
            sb.append("Tuổi có giá trị không hợp lệ (Phải là giá trị số)!\n");
        }
    }
    private void Email(StringBuilder sb){
        
        String mail = "\\w+@\\w+(.\\w+){1,3}";
        if(!txtEmail.getText().matches(mail)){
           
            sb.append("Sai định dạng mail !\n");
             txtEmail.setBackground(Color.yellow);
        }else{
            txtEmail.setBackground(Color.white);
        }
        
    }
    private void Luong(StringBuilder sb){
        try {
            double luong = Double.parseDouble(txtLuong.getText());
            
            if ( luong <= 5000){
                txtLuong.setBackground(Color.yellow);
                sb.append("Lương có giá trị không hợp lệ (Phải lớn hơn 5.000)!\n");
            }else{
                txtLuong.setBackground(Color.white);
            }
        } catch (Exception e) {
            txtLuong.setBackground(Color.yellow);
            sb.append("Lương phải là giá trị số! \n");
        }
    }
     public void loadList(){
        NhanVien nv;
            String ma = txtMaNV.getText();
            String ten = txtName.getText();
            Double tuoi = Double.parseDouble(txtTuoi.getText());
            String email = txtEmail.getText();
            Double luong = Double.parseDouble(txtLuong.getText());
        
            
            nv = new NhanVien(ma,ten,tuoi,email,luong);
          
            nv1.dsnv.add(nv);
            Object[] row = new Object[]{
                nv.getMaNV(), nv.getHoTen(), nv.getTuoi(),nv.getEmail(),nv.getLuong()
            };
            model.addRow(row);
            this.updateStatusRecord();
    }
     private void Time() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss aa");
        String time  = sdf.format(date.getTime());
        lblTime.setText(time);
        Thread A = new Thread(this);
        A.start();
    }
     public void update(){
         //1. dòng mà user đang chọn
        int index = jtbNhanVien.getSelectedRow();
        
        //2.Lấy sinh viên tại index
        NhanVien nvCu = nv1.dsnv.get(index);

        nvCu.setMaNV(txtMaNV.getText());
        nvCu.setHoTen(txtName.getText());
        nvCu.setTuoi(Double.parseDouble(txtTuoi.getText()));
        nvCu.setEmail(txtEmail.getText());
        nvCu.setLuong(Double.parseDouble(txtLuong.getText()));
       
     
        
     }
     public void findEmployee(){
          String NV;
      int i;
      NV=JOptionPane.showInputDialog(null,"Nhập vào mã NV cần tìm!");
      for(i=0;i<nv1.dsnv.size();i++){
          NhanVien nv=nv1.dsnv.get(i);
          if(nv.maNV.equalsIgnoreCase(NV)){
          JOptionPane.showMessageDialog(this,"Mã nhân viên đã tìm thấy!","Thông báo",JOptionPane.INFORMATION_MESSAGE);
          index=i;
          jtbNhanVien.setRowSelectionInterval(index, index);
          showDetail();
          break;
        }
      }
   try{
            if(NV.equals("")){
                JOptionPane.showMessageDialog(this,"Bạn đang để trống khung tìm kiếm","Thông báo",JOptionPane.ERROR_MESSAGE);
            }
            else if(i != index){
                JOptionPane.showMessageDialog(this,"Không tìm thấy mã Nhân viên","Thông báo",JOptionPane.ERROR_MESSAGE);
            }
        }catch(NullPointerException ex){
            JOptionPane.showMessageDialog(this,"Bạn đã thoát chức năng tìm kiếm","Thông báo",JOptionPane.ERROR_MESSAGE);
            }
     }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelHoVaTen;
    private javax.swing.JLabel jLabelLuong;
    private javax.swing.JLabel jLabelMaNhanVien;
    private javax.swing.JLabel jLabelTuoi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jsxLuong;
    private javax.swing.JButton jsxMa;
    private javax.swing.JButton jsxTen;
    private javax.swing.JTable jtbNhanVien;
    private javax.swing.JLabel lblRecond;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() 
    {while (true) {            
            try {
                Date now = new Date();
                SimpleDateFormat formater = new SimpleDateFormat();
                formater.applyPattern("hh:mm:ss aa");
                String time = formater.format(now);
                lblTime.setText(time);
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
